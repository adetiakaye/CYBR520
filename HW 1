import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
data = pd.read_csv('spambase(2).csv')

plt.plot(data['capitalLong'])
plt.title('Distribution of capitalLong')
plt.xlabel('Index')
plt.ylabel('capitalLong')
plt.show()
data['type'].value_counts().plot(kind='bar', color=['blue', 'orange'])
plt.title('Frequency of Spam and Non-Spam Emails')
plt.xlabel('Type')
plt.ylabel('Frequency')
plt.show()
plt.scatter(data['num3d'], data['num000'])
plt.title('Relationship between num3d and num000')
plt.xlabel('num3d')
plt.ylabel('num000')
plt.show()
data['money'].plot(kind='hist', bins=30, edgecolor='black')
plt.title('Distribution of Money Feature')
plt.xlabel('Money')
plt.ylabel('Frequency')
plt.show()
data['type'].value_counts().plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.title('Proportion of Spam and Non-Spam Emails')
plt.ylabel('')
plt.show()
capitalAve_summary = data['capitalAve'].describe()
capitalAve_summary_df = pd.DataFrame(capitalAve_summary)
print(capitalAve_summary_df)
mean_our = data['our'].mean()
median_our = data['our'].median()
std_our = data['our'].std()
print("Mean of 'our':", mean_our)
print("Median of 'our':", median_our)
print("Standard Deviation of 'our':", std_our)
min_hp = data['hp'].min()
max_hp = data['hp'].max()
print("Minimum of 'hp':", min_hp)
print("Maximum of 'hp':", max_hp)
min_hp = data['hp'].min()
max_hp = data['hp'].max()
print("Minimum of 'hp':", min_hp)
print("Maximumpercentiles_telnet = data['telnet'].quantile([0.25, 0.5, 0.75])
print("Percentiles for 'telnet':\n", percentiles_telnet)
 of 'hp':", max_hp)
mode_you = data['you'].mode()[0]
print("Mode of 'you':", mode_you)
iqr_business = data['business'].quantile(0.75) - data['business'].quantile(0.25)
print("IQR of 'business':", iqr_business)
skew_credit = data['credit'].skew()
kurtosis_credit = data['credit'].kurt()
print("Skewness of 'credit':", skew_credit)
print("Kurtosis of 'credit':", kurtosis_credit)
correlation_capital = data['capitalAve'].corr(data['capitalTotal'])
print("Correlation between 'capitalAve' and 'capitalTotal':", correlation_capital)
variance_money = data['money'].var()
print("Variance of 'money':", variance_money)
variance_money = data['money'].var()
print("Variance of 'money':", variance_money)
correlation_matrix = data.corr()
print("Correlation Matrix:\n", correlation_matrix)
highest_corr = correlation_matrix.unstack().sort_values()
highest_positive_corr = highest_corr[highest_corr < 1].tail(1)
highest_negative_corr = highest_corr.head(1)
print("Highest positive correlation:", highest_positive_corr)
print("Highest negative correlation:", highest_negative_corr)
plt.figure(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix Heatmap')
plt.show()
correlation_remove_internet = data['remove'].corr(data['internet'])
print("Correlation between 'remove' and 'internet':", correlation_remove_internet)
correlation_num3d_num000 = data['num3d'].corr(data['num000'])
print("Correlation between 'num3d' and 'num000':", correlation_num3d_num000)
correlation_font_money = data['font'].corr(data['money'])
print("Correlation between 'font' and 'money':", correlation_font_money)
correlation_table_technology = data['table'].corr(data['technology'])
print("Correlation between 'table' and 'technology':", correlation_table_technology)
